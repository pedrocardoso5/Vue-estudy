{"remainingRequest":"/home/pedro/Documents/bolsa/site/Vue-estudy/low_cost_drum/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/pedro/Documents/bolsa/site/Vue-estudy/low_cost_drum/src/views/sobre.vue?vue&type=template&id=ec7337e2&scoped=true&","dependencies":[{"path":"/home/pedro/Documents/bolsa/site/Vue-estudy/low_cost_drum/src/views/sobre.vue","mtime":1576580108394},{"path":"/home/pedro/Documents/bolsa/site/Vue-estudy/low_cost_drum/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pedro/Documents/bolsa/site/Vue-estudy/low_cost_drum/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/pedro/Documents/bolsa/site/Vue-estudy/low_cost_drum/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pedro/Documents/bolsa/site/Vue-estudy/low_cost_drum/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}